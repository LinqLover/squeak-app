*** Squeak 6.0 Release Notes ***TBD (summary)Please find below a detailed listing of all the changes, which includes notes on Major Deprecations, Known Issues, and Compatibility Notes at the bottom.    /^(o.o)^\  /^(o.o)^\  /^(o.o)^\  /^(o.o)^\  /^(o.o)^\ Detailed Improvements in Language, Tools, and the Environment~~~ Core Language ~~~Kernel (up to Kernel-eem.1408)- Switches the default bytecode set to SistaV1. This lays the basis for a new generation of VM optimizations (Sista: Speculative Inlining Smalltalk Architecture). With Sista, blocks are represented by CompiledBlocks and instantiated as FullBlockClosures, stability of which has been improved in the course of this switch (fixed bugs in FullBlockClosure >> #= and InstructionStream >> #scanForInstructionSequence:).- Adds full support for read-only objects that is backed by a VM-side write barrier bit. If an attempt is made to manipulate a read-only object, a ModificationForbidden error will be signaled. Some objects are read-only by default.- Numbers: Adds new testing selectors Number >> #hasLimitedPrecision and Float >> #isDenormal. Accelerates SmallInteger >> #highBit by connecting it to a new VM primitive. Adds utiliies for converting floats from/into IEEE representations. Fixes bugs in Float >> #isPowerOfTwo, Float >> #log2, and LargePositiveInteger >> #sqrt.- Simulation and debugging: Completion and fixes for the simulation of Objects as Methods, #doesNotUnderstand:, and several primitives. Protects the simulation machinery against internal simulator errors which previously could blow up your image. Upgrades Context class >> #runSimulated: to a synchronous entry point into the simulator.- Process management: Makes Process more robust against invalid instantiation and termination attempts. Fixes several bugs in reading the state of processes and terminating them. In particular, reinforces that all unwind (#ensure:) contexts will be executed during termination which may include the top context of the process. Fixes bugs in ProcessorScheduler >> #highestPriority: and ProcessorScheduler >> #anyProcessesAbove:. Improves convenience of Process >> #printString.- Bugfixes and improved robustness during exception handling.- BlockClosure: Adds #whileNil, revises return values of #whileNil: and #valueWithExit.- Fixes some implementations of #copy.- Work continues on streamlining ProtoObject and making it understand as few messages as possible.- Switches identity forwarding to not copy the hash by default.- Work continues on improving compatibility of Promise with the Promise/A+ specification.- Work continues on decoupling Kernel from UI frameworks.- Revises some event sensor constants and fixed the timestamps of synthetized events.- Simplifies the compilation protocol on ClassDescription. Robustizes decompilation against syntax errors. Adds utility methods on SharedPool and on CompiledMethod.- Softly deprecates #ifNotNilDo:, #ifNil:ifNotNilDo: and #ifNotNilDo:ifNil:; please switch to their pendants without 'Do'.- Miscellaneous speed-ups (#cull:[cull:]) and clean-ups (ByteSetEncoder, ClassBuilder, source pointers, minor deprecations).Collections (up to Collections-dtl.954)- Subsumes all non-pointer array classes under the new superclass RawBitsArray: splits up FloatArray into Float32Array and the new VM-optimized Float64Array; extracts superclass UnsignedIntegerArray from [Double]ByteArray and [Double]WordArray; extracts RawBitsArray from UnsignedIntegerArray, ColorArray, and FloatArray. Adds Signed variants for UnsignedIntegerArray and all subclasses.- Increases precision of intervals of floats by extracting new subclass LimitedPrecisionInterval.- Improves compatibility of Streams with the Collection protocol.- Adds new capabilities to the collection hierarchy: There are now Collection >> #symmetricDifference: and SequenceableCollection >> #indicesOfSubCollection:[startingAt:].- Adds Dictionary >> #replace:.- Implements removal on RunArray.- Improves stability of SharedQueues and lets them understand #peekLast.- Updates the list of character constants and separators.- Adds convenience selectors on Text for removing or replacing attributes.- Adds support for <img> tags to HTMLTextReadWriter.- Refactors TranscriptStream implementation and fixes the redirectToStdout mode.- Refactors initialization and clean-up of collections and symbols.- Deprecates SequenceableCollection >> #doWithIndex: and #collectWithIndex: in favor of #withIndexDo: and #withIndexCollect:.- Overall improvements to stability, performance, test coverage, and documentation.Chronology- Automatically updates the image time zone every 30 minutes.- Honor nanoseconds in Time >> #addSeconds: and DateAndTime >> #printString:.- Extends DateAndTime class >> #readFrom: to accept offset strings without a colon according to the RFC 822 specification.- Adds precise #busyWait on Delay as an alternative to the existing idle #wait.- Provides Time class >> #millisecondClock and DateAndTime class >> #millisecondClock (no 45-daily roll-over).- Deprecates #totalSeconds and #millisecondClockValue on DateAndTime; use Time class >> #millisecondClock instead.- Changes Number >> #second to no longer trim off the magnitude of the receiver. That is, 3 second now equals 3 seconds (plural).Compiler- All compiled literals will now be read-only objects.- Fixes text selection during interactive error handling; decouples the parser from the requesting UI frameworks.- Allows to cancel compilation if an unused variable is detected.- Changes the default return value of a do-it from nil to self.- Extends parser hooks to be used by FFI or similar for parsing custom pragmas and external function declarations. Provides Scanner class >> #isMessageSelector: as a convenience.- Miscellaneous fixes to the decompiler: improves support for FullBlockClosure, makes sure that decompiled ASTs can emit correct bytecode again, and handles many further edge cases correctly.- Upgrades and corrects CompilationCue to have full control over a compilation request.- Cleans up SyntaxErrorNotification to honor all compilation parameters from a CompilationClue during recompilation. Renames #resume: into #retryWithNewSource:.- Overall improvements to documentation.Environments- Minor stability improvements to EnvironmentRequest and uninstallation of environments.Traits- Minor optimizations to the compiler.PackageInfo- Fixes inclusion test for packages against invalid method references.~~~ Graphics & Sound ~~~Graphics- Changes the object format of LayoutFrame to remove nil values from all fields. Adds convenience selector #fullFrame.- Adds Color >> #veryMuchDarker and improves the printString of translucent colors.- Improves display of multiple TextAnchors. Adds convenience selector Form >> #asTextAnchor.- Improves geometry convenience by adding Point >> #exactCenter:, Rectangle >> #pointAtFraction:, and Rectangle >> #randomPoint[:].- Miscellaneous clean-ups, stability enhancements, and improved test coverage.Balloon- No significant changes.TrueType (Fonts)- Work continues on an image-wide pixel-per-inch setting.Sound- Fixes wave sound streaming on non-filestream objects.- Adds convenience selectors to MIDIScore and TempoEvent.- Miscellaneous stability improvements with regard to the sound player process, FFT, MixedSounds, and the SoundRecorder protocol.~~~ Network ~~~Network- Improves support for IPv6 networking.- Fixes parsing of mime documents.- Improves error handling of connection errors.SqueakSSL- No significant changes.WebClient- Corrects handling of HTTP status codes (according to RFC 7230).- Fixes a syntax error in the encoding of multipart/form-data requests.- Overall optimizations, robustness enhancements, and improvements of the internal test coverage.XML- No significant changes.~~~ System Services & Files ~~~Files- Work continues on supporting different types of objects dropped from the host system.- Speeds up StandardFileStream >> #upToEnd.Compression- No significant changes.Regex- Adds full support for lookaround expressions (i.e., positive & negative lookaheads & lookbehinds).- Fixes parsing of quantifiers of the form {<min>,}.- Overall optimizations and stability improvements with regard to parsing invalid expressions.System- Levels up the command-line interface of Squeak which now supports do-its and a couple of other options. To get started, run squeak Squeak60.image -help in the command shell of your host system.- Extends SpaceTally with a parameter for limiting traversion depth through the object graph.- Complements changes logging with timestamps for class changes and method removal. Adds queries to enumerate actual domain objects for changed classes or methods.- Makes the file-in mechanism compatible with Cuis package file-outs.- Sensitize SystemOrganizer to multiple environments and adds a hook in ToolSet to browse an environment.- Adds a hook in SystemNavigation to browse all stores into a global variable.- Adds a new AppRegistry to manage text stylers for different language syntaxes. Examples include the built-in SHTextStylerST80 and the MarkdownEditor.- Adds a parameter to TextDiffBuilder to make the order of insertions and removals configurable.- Tunes default colors in UserInterfaceThemes and makes it possible to set UI theme properties from a target.- About the system: Provides a set of queries for the status of Squeak's continuous integration builds.- Lots of clean-ups all over the package. Work continues on decoupling the System package from other packages such as Morphic and Etoys.- Stability improvements. In particular, the robustness of the shutdown/startup cycle when closing and reopening the image is improved.- Several bugfixes to ImageSegment deserialization, Smalltalk patchSystem, ThirtyTwoBitRegister, and many other protocols.- Multiple speed-ups. In particular, the performance of fetching locale strings via #translated is improved drastically.- Extends documentation.~~~ GUI Frameworks ~~~Morphic- Reworks the mapping of keystrokes to virtual keys for better cross-platform consistency. Try them out interactively or browse the available preferences.- Refactors the global variables ActiveWorld, ActiveHand, and ActiveEvent. Clients shall now refer to Object >> #currentWorld, #currentHand, and #currentEvent instead.- TBDEtoys- Work continues on keeping classical Etoys project loadable.- TBDST80- TBD~~~ Help & Internationalization ~~~GetText- TBDMultilingual- TBDHelp- TBD~~~ Programming Tools ~~~Tools (ToolBuilder, CommandLine, Protocols)- Adds convenience methods for tool building on Model.- TBDPreferences (Browser, Wizard)- TBDSUnit- TBDNebraska- TBDServices- TBDShout (Syntax Highlighting)- TBDDebugger- TBD~~~ Version Control & Package Management ~~~Installer (VersionNumber, UpdateStream, Squeak-Version)- TBDMonticello- TBDSqueakMap- TBD~~~ Deployment & Misc. ~~~Tests- TBDReleaseBuilder- Improves the reproducibility of the image state by resetting all pragma preferences to the default values specified in their declarations.- TBDMajor Deprecations- Deprecates SequenceableCollection >> #doWithIndex: and #collectWithIndex: in favor of #withIndexDo: and #withIndexCollect:.- Deprecates #ifNotNilDo:, #ifNil:ifNotNilDo: and #ifNotNilDo:ifNil:; please switch to their pendants without 'Do'.- TBDKnown Issues- Process termination is currently buggy and will silently drop the process if some unwind contexts signal an unhandled error. See: [squeak-dev] Solving multiple termination bugs - summary & proposal.- When you abandon a debugger from within an unwind context, execution of the unwind context will be continued. See: [squeak-dev] The semantics of halfway-executed unwind contexts during process termination.- Lookbehinds in regular expression are not yet considered stable. Inserting them into a nullable closure currently causes a MessageNotUnderstood error. Also, matching is not optimized and currently has a quadratic runtime complexity.- TBDCompatibility Notes- In SyntaxErrorNotification, #resume: was renamed to: #retryWithNewSource: to clarify that the control flow will not just resume but compilation will be retried.- #asMutator is back to preserve the well-known Smalltalk legacy and improve the backward compatibility for projects such as Seaside. However, new code should use #asSimpleSetter instead.- The default value for #allowBlockArgumentAssignment is now enforced, which means disabled. Your project might have to enable this preference again if you want to assign to block arguments.- Process >> #terminate will now consistently execute all unwind contexts which may include the top context of the process. This implies that in rare cases sending #terminate to a process will not interrupt the current control flow immediately.- All code literals are read-only with the new bytecode set SistaV1. If you used to perform inline modifications such as 'hello' at: 1 put: $y or #(1 3 2) sort, you will need to copy the literal first. Brace expressions are not affected.- Identity forwarding via #becomeForward: or #elementsForwardIdentityTo: does no longer copy the hash. Append copyHash: to the selector to override the default behavior.- Spur VM        ("\(^.^)/")          ("\(^.^)/")          ("\(^.^)/") !!!!!!  THANK YOU ALL FOR YOUR CONTRIBUTIONS !!!!!!                     ("\(^.^)/")          ("\(^.^)/")!]style[(32 1 97 18 2 12 6 19 18 4 54 3 61 3 21 2 14 15 1 16 24 7 1 63 50 41 14 21 17 83 22 5 49 27 17 106 21 25 12 29 8 28 30 5 20 14 24 77 4 1 4 37 22 2 14 6 29 4 25 44 18 2 19 14 10 1 1 8 112 31 52 19 7 7 91 17 18 11 50 8 111 39 5 41 26 23 66 13 6 9 27 10 5 14 10 4 1 15 44 11 66 19 81 7 10 10 89 22 66 11 100 13 5 17 249 1 1 19 19 2 66 12 12 10 6 12 26 12 22 20 7 6 1 9 6 6 1 9 51 10 23 6 127 24 13 13 109 35 5 50 13 9 23 15 7 76 9 24 19 5 10 34 4 58 10 36 16 30 16 163 13 5 18 28 9 2 11 37 10 86 20 5 28 12 31 26 15 18 21 17 9 49 5 13 31 5 38 100 31 20 17 63 1 1 6 12 1 1 7 12 8 37 17 32 26 138 20 17 3 4 4 58 22 46 36 81 16 138 14 62 23 104 20 44 12 35 18 38 6 41 11 74 24 2 8 15 13 4 11 65 10 9 24 84 11 28 21 44 22 2 30 6 25 1 1 83 7 28 16 60 5 33 22 34 9 5 10 82 3 2 11 10 13 13 15 2 7 60 14 51 9 28 9 56 8 45 28 101 3 29 31 2 5 32 26 43 30 3 11 28 5 55 44 46 8 98 6 80 25 22 27 53 10 88 15 107 15 4 7 14 17 53 15 37 4 15 6 26 4 24 6 43 17 87 16 9 14 11 9 4 15 13 2 1 2 68 19 26 3 67 14 19 38 202 8 1 7 109 21 2 20 112 11 53 22 2 7 3 7 82 26 4 33 103 23 2 12 6 13 17 5 70 4 9 35 2 7 8 12 8 4 8 25 2 43 32 13 18 29 8 6 7 8 8 8 8 27 8 9 7 44 2 55 8 10 8 9 8 26 2 5 8 14 151 18 89 13 5 18 125 12 3 19 111 67 13 7 99 89 69 85 90 19 6 23 27 20 90 10 151 15 34 29 30 8 102 21 343 7 1 3 1 1 1 4 1 2 4 1 1 1 1 1 1 1 2 4 105 15 4 27 118 1 2 1 17 1 2 1 17 1 2 1 76 1 2 1 17 1 2 1 8 2)f1b,f1,,b,,b,,b,,c170170170,bc170170170,,b,,bf5cgray;,,i,,i,,b,Rcode:// ToolSet browseCommentOfClass: EncoderForSistaV1;b,b,,Rhttps://wiki.squeak.org/squeak/6588;,,LCompiledBlock Comment;,,LFullBlockClosure Comment;,,LFullBlockClosure =;,,LInstructionStream scanForInstructionSequence:;,,Rcode:// ToolSet browse: Object selector: #beReadOnlyObject;b,,LModificationForbidden Comment;,,Rcode:// 'immediate%20objects%3A%20Characters%2C%20SmallIntegers%2C%20and%20SmallFloat64s%0Dsource%20code%20literals%20such%20as%3A%20nil%2C%20true%2C%20false%2C%203.141s%2C%20%23aSymbol%2C%20%27a%20string%27%2C%20%23%28%23array%20%27literals%27%29%2C%20but%20not%20%7B%23brace.%20%23expressions%7D%29%21%0D%5Dstyle%5B%2817%201%201%2010%202%2013%206%2013%201%2020%2010%203%202%204%202%205%202%206%202%208%202%2010%202%201%201%206%201%2010%2012%206%202%2012%202%29Rcode%3A%2F%2F%20%27Smalltalk%20allClasses%20select%3A%20%23isImmediateClass%27%20edit%3BFBitmap%20DejaVu%20Sans%2314b%2CFBitmap%20DejaVu%20Sans%2314b%2CFBitmap%20DejaVu%20Sans%2314%2CLCharacter%20Comment%3B%2CFBitmap%20DejaVu%20Sans%2314%2CLSmallInteger%20Comment%3B%2CFBitmap%20DejaVu%20Sans%2314%2CLSmallFloat64%20Comment%3B%2CFBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314b%2CFBitmap%20DejaVu%20Sans%2314%2Cc114000000FBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc114000000FBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc127000000%2CFBitmap%20DejaVu%20Sans%2314%2Cc127000000%2CFBitmap%20DejaVu%20Sans%2314%2Cc000000127%2CFBitmap%20DejaVu%20Sans%2314%2Cc114000114nFBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc000000114FBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc000000114FBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc114000114nFBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc000000114FBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%2Cc000000114FBitmap%20DejaVu%20Sans%2314%2CFBitmap%20DejaVu%20Sans%2314%21' unescapePercents readStream nextChunkText editWithLabel: 'Objects that are read-only by default';,,b,,LNumber hasLimitedPrecision;,,LFloat isDenormal;,,LSmallInteger highBit;,,Rcode:// ToolSet browse: Float class selector: #fromIEEE64Bit:;,,Rcode:// ToolSet browse: Float selector: #asIEEE64BitWord;,,LFloat isPowerOfTwo;,,LFloat log2;,,LLargePositiveInteger sqrt;,,b,,Rcode:// TestObjectsAsMethods browse;,,c000000085Rcode:// ToolSet browse: Object selector: #doesNotUnderstand:;,,Rcode:// ToolSet browse: Context selector: #doPrimitive:method:receiver:args:;,,f1,Rhttp://forum.world.st/Please-try-out-Fixes-for-debugger-invocation-during-code-simulation-td5127684.html;,f1,LContext class runSimulated:;,,b,,LProcess Definition;,,Rcode:// ToolSet browseClass: Process category: #testing;,,Rcode:// ToolSet browse: Process selector: #terminate;,,c000000085Rcode:// ToolSet browse: BlockClosure selector: #ensure:;,,LProcessorScheduler highestPriority:;,,LProcessorScheduler anyProcessesAbove:;,,LProcess printString;,,b,,Rcode:// ToolSet browse: BlockClosure selector: #whileNil;,,Rcode:// ToolSet browse: BlockClosure selector: #whileNil:;,,Rcode:// ToolSet browse: BlockClosure selector: #valueWithExit;,,Rcode:// ToolSet browse: Model selector: #postCopy;,,RToolSet browse: Context selector: #copyTo:;,,LProtoObject Definition;,,Rcode:// ToolSet browse: Object selector: #becomeForward:;,,LPromise Comment;,,Rhttps://promisesaplus.com/;,,LEventSensorConstants Definition;,,Rcode:// ToolSet browseClass: ClassDescription category: 'compiling';,,Rcode:// ToolSet browse: SharedPool class selector: #declare:from:;,,Rcode:// (CompiledMethod >> #anyAndAllSelectorsDo:) browse;,,i,,i,,i,,LRawBitsArray Hierarchy;,,LFloatArray Definition;,,LFloat32Array Definition;,,LFloat64Array Definition;,,LUnsignedIntegerArray Hierarchy;,,LDoubleByteArray Definition;,,LByteArray Definition;,,LDoubleWordArray Definition;,,LWordArray Definition;,,LColorArray Definition;,,LSignedIntegerArray Hierarchy;,,LLimitedPrecisionInterval Definition;,,Rcode:// ToolSet browseClass: Stream category: 'collections - enumerating';,,LCollection symmetricDifference:;,,LSequenceableCollection indicesOfSubCollection:;,LSequenceableCollection indicesOfSubCollection:startingAt:;,,LDictionary replace:;,,Rcode:// ToolSet browseClass: RunArray category: 'removing';,,Rcode:// self systemNavigation browseAllImplementorsOf: #peekLast;,,Rcode:// ToolSet browse: Character class selector: #constantNames;,,Rcode:// ToolSet browse: Character class selector: #separators;,,LText Definition;,,Rcode:// Project uiManager edit: '%27%3Cimg%20src%3D%22code%3A%2F%2Fself%20currentWorld%20imageForm%22%3E%27%20asTextFromHtml%20edit.%0D%27%3Cimg%20src%3D%22https%3A%2F%2Fsqueak.org%2Fimg%2Fballoon_square.png%22%3E%27%20asTextFromHtml%20edit.' unescapePercents label: '<img> tags are there!!' shouldStyle: true;,,LTranscriptStream Definition;,,Rcode:// PreferenceBrowser open searchPattern: 'redirectToStdOut';,,LSequenceableCollection withIndexDo:;,,LSequenceableCollection withIndexCollect:;,,Rcode:// self systemNavigation browseMessageList: #('OrderedCollection removeFirst:' 'OrderedCollection removeLast:' 'Stream take:' 'String findSelector') name: 'methods with minor fixes';,,Rcode:// self systemNavigation browseMessageList: #('ByteArray readHexFrom:' 'Interval do:' 'OrderedCollection do:' 'ReadStream match:' 'RunArray Definition' 'String =' 'WriteStream growTo:') name: 'optimized methods';,,i,,LTime addSeconds:;,,LDateAndTime printOn:;,,LDateAndTime class readFrom:;,,Rcode:// '''1970-01-01T00:00:00.000+0000'' asDateAndTime' edit;,,Rhttps://datatracker.ietf.org/doc/html/rfc822#section-5.1;,,LDelay busyWait;,,LDelay wait;,,LTime class millisecondClock;,,LDateAndTime class millisecondClock;,,LTime class millisecondClock;,,LNumber second;,,c085000000,,c000000085,,c085000000,,c000000085,,i,,Rcode:// ToolSet browse: Object selector: #beReadOnlyObject;,,Rcode:// Project uiManager edit: '"Do it!!"| x z |y := 1.z zöglfrex' label: 'Interactive error correction example' shouldStyle: true;,,Rcode:// Project uiManager edit: 'Compiler evaluate: '''' for: Object new' label: 'default return value' shouldStyle: true;,,c085000000,,c085000000,,Rcode:// self systemNavigation browseAllCallsOn: #pragmaParser;,,LScanner class isMessageSelector:;,,LFullBlockClosure Comment;,,LCompilationCue Comment;,,LSyntaxErrorNotification Comment;,,LSyntaxErrorNotification retryWithNewSource:;,,i,,LEnvironmentRequest Definition;,,i,,i,,bf5cgray;,,i,,Rcode:// (self currentWorld findA: SystemWindow) firstSubmorph layoutFrame inspect;,,LLayoutFrame Definition;,,LLayoutFrame class fullFrame;,,LColor veryMuchDarker;,,Rcode:// Compiler evaluate: '%28%27%7B1%7D%20can%20even%20be%20%7B2%7D%20into%20each%20other%21%27%20asText%20format%3A%20%7B%27Text%20anchors%27%20asText%20allBold.%20Character%20startOfHeader%20asText%20addAttribute%3A%20%28%28%27%7B1%7D%20nested%20%7B1%7D%27%20asText%20format%3A%20%7BCharacter%20startOfHeader%20asText%20addAttribute%3A%20%28Form%20squeakLogo%20scaledIntoFormOfSize%3A%2024%20asPoint%29%20asTextAnchor%7D%29%20asMorph%20backgroundColor%3A%20Color%20yellow%3B%20asTextAnchor%29%7D%29%20edit.' unescapePercents;,,LForm asTextAnchor;,,LPoint exactCenter:;,,LRectangle pointAtFraction:;,,LRectangle randomPoint;,,LRectangle randomPoint:;,,i,,i,,i,,Rcode:// Project uiManager edit:  'array%20%3A%3D%20ByteArray%20streamContents%3A%20%5B%3Astream%20%7C%0D%09PluckedSound%20bachFugue%20storeWAVSamplesOn%3A%20stream%5D.%0D%28FileStream%20fileNamed%3A%20%27bachFugue.wav%27%29%20binary%20in%3A%20%5B%3Astream%20%7C%0D%09%5Barray%20do%3A%20%5B%3Aea%20%7C%20stream%20nextPut%3A%20ea%5D%5D%0D%09%09ensure%3A%20%5Bstream%20close%5D%5D.%0D%28SampledSound%20fromWaveFileNamed%3A%20%27bachFugue.wav%27%29%20play.' unescapePercents label: 'Wave soudn streaming on non-filestream objects' shouldStyle: true;,,LMIDIScore Definition;,,LTempoEvent Definition;,,LFFT Comment;,,LMixedSound Definition;,,LSoundRecorder Definition;,,bf5cgray;,,i,,LMIMEDocument Definition;,,i,,i,,Rhttps://datatracker.ietf.org/doc/html/rfc7230;,,Rcode:// ToolSet browse: WebClient class selector: #httpPost:multipartFields:;,,i,,bf5cgray;,,i,,Rcode:// ToolSet browseClass: FileDirectory class category: 'dnd requests';,,LStandardFileStream upToEnd;,,i,,i,,Rcode:// self systemNavigation browseMessageList: #('RxParserTest testNegativeLookahead' 'RxParserTest testNegativeLookbehind' 'RxParserTest testPositiveLookahead' 'RxParserTest testPositiveLookbehind') name: 'tests for lookaround expressions';,,c097000097n,,i,,Rcode:// (Lexicon new openOnClass: DoItFirst showingSelector: nil) chooseCategory: 'actions';,,++,,LSpaceTally Comment;,,Rcode:// ChangeList browseRecentLog;,,Rcode:// ToolSet browseClass: ChangeSet category: 'class changes';,,Rcode:// ToolSet browseClass: ChangeSet category: 'method changes';,,Rcode:// self systemNavigation browseAllImplementorsOf: #fileIn;,,LSystemOrganizer Definition;,,Rcode:// ToolSet browse: ToolSet class selector: #browseEnvironment:;,,Rcode:// ToolSet browseEnvironment: Object newSubclass environment;,,Rcode:// ToolSet browse: SystemNavigation selector: #allStoresInto:;,,Rcode:// self systemNavigation browseAllCallsOn: #World;,,Rcode:// ToolSet browseCommentOfClass: TextStyler;,,LSHTextStylerST80 Comment;,,Rhttps://github.com/hpi-swa-teaching/MarkdownEditor;,,Rcode:// PreferenceBrowser open searchPattern: #showInsertBeforeRemove;,,LTextDiffBuilder Definition;,,Rcode:// Compiler evaluate:  '%28TextDiffBuilder%20new%0D%09showInsertBeforeRemove%3A%20false%3B%0D%09from%3A%20%27Hello%20world%21%5CLong%20live%20Smalltalk%21%27%20withCRs%20%0D%09to%3A%20%27Hello%20Squeak%21%5CLong%20live%20Smalltalk%21%27%20withCRs%29%0D%09%09buildDisplayPatch%20edit' unescapePercents;,,Rcode:// Compiler evaluate:  '%28TextDiffBuilder%20new%0D%09showInsertBeforeRemove%3A%20true%3B%0D%09from%3A%20%27Hello%20world%21%5CLong%20live%20Smalltalk%21%27%20withCRs%20%0D%09to%3A%20%27Hello%20Squeak%21%5CLong%20live%20Smalltalk%21%27%20withCRs%29%0D%09%09buildDisplayPatch%20edit' unescapePercents;,,LUserInterfaceTheme Hierarchy;,,Rcode:// ToolSet browse: UserInterfaceThemeRequest selector: #doesNotUnderstand:;,,Rcode:// ToolSet browseClass: SystemVersion category: 'continuous integration';,,Rhttps://github.com/squeak-smalltalk/squeak-app;,,Rcode:// (Behavior >> #shutDown) browse;,,Rcode:// (Behavior >> #startUp) browse;,,LSmalltalkImage patchSystem;,,LThirtyTwoBitRegister Definition;,,Rcode:// self systemNavigation browseAllCallsOn: #translated;,,bf5cgray;,,i,,Rhttp://forum.world.st/Please-try-it-out-Fixing-the-input-mapping-for-keystroke-events-td5129004.html;,,Rcode:// KeyboardExerciser new openInHand;,,Rcode:// PreferenceBrowser open searchPattern: EventSensor name;,,LObject currentWorld;,,LObject currentHand;,,LObject currentEvent;,,i,,i,,bf5cgray;,,i,,i,,i,,bf5cgray;,,i,,Rcode:// ToolSet browseClass: Model category: 'toolbuilder';,,i,,i,,i,,i,,i,,i,,bf5cgray;,,i,,i,,i,,bf5cgray;,,i,,i,,b,,LSequenceableCollection withIndexDo:;,,LSequenceableCollection withIndexCollect:;,,b,,Rcode:// ToolSet browse: Process selector: #terminate;,,Rhttp://lists.squeakfoundation.org/pipermail/squeak-dev/2021-April/214633.html;,,Rcode:// '%5B%5D%20ensure%3A%20%5Bself%20halt%3A%20%27abandon%20here...%27%3B%20inform%3A%20%27...and%20this%20should%20not%20be%20executed%21%27%5D.' unescapePercents edit;,,Rhttp://lists.squeakfoundation.org/pipermail/squeak-dev/2021-May/215604.html;,,LRxParserTest testOptionalLookbehind2;,,b,,Rcode://SyntaxErrorNotification;,,Rcode://#retryWithNewSource:;,,Rcode://#asMutator;,,Rcode://#asSimpleSetter;,,Rcode://#allowBlockArgumentAssignment;,,i,,LProcess terminate;,,c085000085n,,c000000085,,c085000000,,c000000085,,c085000000,,c000000085,,c085000000,,c085000000,,c085000000,,c000000085,,LObject becomeForward:;,,LArray elementsForwardIdentityTo:;,,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,cblue;,bcblue;,!